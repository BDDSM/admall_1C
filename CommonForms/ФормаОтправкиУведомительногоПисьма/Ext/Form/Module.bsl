
&НаКлиенте
Процедура Отправить(Команда)
	ОтправкаПисьмаУведомленияПользователям();
КонецПроцедуры

&НаСервере
Функция ПолучитьАдресАдресТехЭлПочты()
	Возврат Константы.АдресТехЭлПочты.Получить()
КонецФункции

//НаСервере
&НаСервере 
Процедура ОтправкаПисьмаУведомленияПользователям()

//server: smtp.yandex.ru
//  port: 465
//  use_tls: false
//  use_ssl: true
//  username: noreply@najet.ru
//  password: EreH7kGa

АдресТехЭлПочты = ПолучитьАдресАдресТехЭлПочты();

	//Создаем профиль либо считываем из справочника
		Профиль = Новый ИнтернетПочтовыйПрофиль;
			Профиль.АдресСервераSMTP =	"smtp.yandex.ru";
			Профиль.ПортSMTP = 465;
			Профиль.Пользователь = АдресТехЭлПочты;
			Профиль.Пароль = "EreH7kGa";
			Профиль.ПользовательSMTP = АдресТехЭлПочты; 
			Профиль.ПарольSMTP = "EreH7kGa";
			Профиль.АутентификацияSMTP = СпособSMTPАутентификации.ПоУмолчанию;
			Профиль.ТолькоЗащищеннаяАутентификацияSMTP = Истина;
			Профиль.ИспользоватьSSLSMTP = Истина;
			Профиль.Таймаут = 35; 

		//Создаем письмо
		Почта = Новый ИнтернетПочта;
			Письмо = Новый ИнтернетПочтовоеСообщение;
			 ОкончТелоПисьмаПростойТекст = Символы.ПС + Символы.ПС +
						"База 1С: " + База + Символы.ПС +
						"Ссылка: " + База.ЭлАдресБазы + Символы.ПС +
						"Администратор БД: " + База.логинАдминистраторБД + Символы.ПС +
						"пас: " +  База.парольАдминистратораБД + Символы.ПС +
						"Администратора АК: " + База.логинАдминистратораАК + Символы.ПС +
						"пас: " + База.ПарольАдминистратораАК + Символы.ПС + Символы.ПС +
						?(ЗначениеЗаполнено(База.ЭлАдресБилетногоМодуля), "Билетный модуль:" + Символы.ПС +
						"Ссылка: " + База.ЭлАдресБилетногоМодуля + Символы.ПС +
						"Администратора билетного модуля: " + База.логинАдминистратораБилетногоМодуля + Символы.ПС +
						"пас: " + База.ПарольАдминистратораБилетногоМодуля + Символы.ПС + Символы.ПС +
						"Связь 1С с Билетным модулем:" + Символы.ПС +
 						"логин: " + База.ЛогинСвязь1ССБилетнымМодулем + Символы.ПС + 
						"пас: " + База.ПарольСвязь1ССБилетнымМодулем + Символы.ПС + Символы.ПС, "") +

						?(ЗначениеЗаполнено(База.БронированиеСайт),
						"Бронирование: " + Символы.ПС +
						"Ссылка: " + База.БронированиеСайт + Символы.ПС +
						"логин: " + База.ЛогинБронированиеСайт + Символы.ПС +
						"пас: " + База.ПарольБронированиеСайт + Символы.ПС + Символы.ПС, "");

										ОкончТелоПисьма =  "
										|<br /><br /><br /><h3>База 1С: " + База + " </h3>
										|Ссылка: "  +  База.ЭлАдресБазы + "<br />
										|Администратор БД: " + База.логинАдминистраторБД  + " <br  />
										|пас: " +  База.парольАдминистратораБД + " <br  />
										|Администратора АК: " + База.логинАдминистратораАК + " <br  />
										|пас: " + База.ПарольАдминистратораАК + " <br  /><br  />
										|";

										ОкончТелоПисьма = ?(ЗначениеЗаполнено(База.ЭлАдресБилетногоМодуля), ОкончТелоПисьма  + "
										|</h3>Билетный модуль: </h3>
										|Ссылка: "  +  База.ЭлАдресБилетногоМодуля + "<br />
										|Администратора билетного модуля: " + База.логинАдминистратораБилетногоМодуля  + " <br  />
										|пас: " +  База.ПарольАдминистратораБилетногоМодуля + " <br  /><br  />
										|
										|</h2>Связь 1С с Билетным модулем: </h2><br  />
										|логин: " + База.ЛогинСвязь1ССБилетнымМодулем + " <br  />
										|пас: " + База.ПарольСвязь1ССБилетнымМодулем  + " <br  /><br  />
										|","");

										ОкончТелоПисьма = ?(ЗначениеЗаполнено(База.БронированиеСайт), ОкончТелоПисьма  + "
										|</h3>Бронирование: </h3>
										|Ссылка: "  +  База.БронированиеСайт + "<br />
										|логин: " + База.ЛогинБронированиеСайт  + " <br  />
										|пас: " +  База.ПарольБронированиеСайт + " <br  /><br  />
										|", "");

				Текст = Письмо.Тексты.Добавить(ОкончТелоПисьма);
				Текст.ТипТекста = ТипТекстаПочтовогоСообщения.HTML; //  .ПростойТекст;
			Письмо.Тема = "NAJET. Развернута и доступна новая база 1С " + Символ(31) + База + Символ(31);
			Письмо.Отправитель = АдресТехЭлПочты;
			Письмо.ИмяОтправителя = Лев(АдресТехЭлПочты, Найти(АдресТехЭлПочты, "@")-1);

				Для Каждого СтрокаТЧ Из СписокПолучателейПисьма Цикл
					Письмо.Получатели.Добавить(СтрокаТЧ.НаименованиеПолучателя.email);
				КонецЦикла;

		//Подключиться к ящику 
		Попытка
			Почта.Подключиться(Профиль);		 
			Сообщить("Соединение с почтовым сервером завершено успешно!");
		Исключение
			Сообщить("Ошибка подключения к электронному ящику");
		КонецПопытки;

		//Отправляем письмо
		Попытка
			 Почта.Послать(Письмо);	 	  
				Сообщить("Электронное письмо отправлено успешно");
		Исключение
			Сообщить("Ошибка отправки электронного письма");
		КонецПопытки;

		//Закрываем письмо
		Почта.Отключиться();
		//Закрываем файл вложения
		Письмо.Вложения.Очистить();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьЗначениеЭлАдреса(ВыбранноеЗначение)
	Возврат ВыбранноеЗначение.email;
КонецФункции

&НаКлиенте
Процедура ЭлАдресТехническойПочты(Команда)
	ОткрытьФорму("Константа.АдресТехЭлПочты.ФормаКонстант",,,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура СписокПолучателейПисьмаПриИзменении(Элемент)

	Если СписокПолучателейПисьма.Количество() > 1 И ЗначениеЗаполнено(Элемент.ТекущиеДанные.НаименованиеПолучателя) Тогда 
		МассивОдинаковыхСтрок = СписокПолучателейПисьма.НайтиСтроки(
			Новый Структура("НаименованиеПолучателя", Элемент.ТекущиеДанные.НаименованиеПолучателя)); 
				Если МассивОдинаковыхСтрок.Количество() > 1 Тогда
					МассивОдинаковыхСтрок.Удалить(1); 
					Элемент.ТекущиеДанные.НаименованиеПолучателя = ПредопределенноеЗначение("Справочник.ПолучательПисьма.ПустаяСсылка");
						МассивПустыхСтрок = СписокПолучателейПисьма.НайтиСтроки(
							Новый Структура("НаименованиеПолучателя", ПредопределенноеЗначение("Справочник.ПолучательПисьма.ПустаяСсылка"))); 
								Если МассивПустыхСтрок.Количество() > 0 Тогда
									Для каждого Строка Из МассивПустыхСтрок Цикл 
										СписокПолучателейПисьма.Удалить(Строка); 
									КонецЦикла;
								КонецЕсли;
						Возврат;
				КонецЕсли;
		КонецЕсли;

	Элемент.ТекущиеДанные.ЭлАдресПолучателя = ЗаполнитьПолеЭлПисьма(Элемент.ТекущиеДанные.НаименованиеПолучателя);

КонецПроцедуры

&НаСервере
Функция ЗаполнитьПолеЭлПисьма(НаименованиеПолучателя)
	Возврат НаименованиеПолучателя.Ссылка.email;
КонецФункции

&НаКлиенте
Процедура СписокПолучателейПисьмаПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)

	МассивПустыхСтрок = СписокПолучателейПисьма.НайтиСтроки(
		Новый Структура("НаименованиеПолучателя", ПредопределенноеЗначение("Справочник.ПолучательПисьма.ПустаяСсылка"))); 
			Если МассивПустыхСтрок.Количество() > 0 Тогда
				Для каждого Строка Из МассивПустыхСтрок Цикл 
					СписокПолучателейПисьма.Удалить(Строка); 
				КонецЦикла;
			КонецЕсли;

КонецПроцедуры

